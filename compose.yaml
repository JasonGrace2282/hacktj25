services:
  django:
    container_name: hacktj_django
    build:
      dockerfile_inline:
        FROM ghcr.io/astral-sh/uv:0.6-python3.13-bookworm-slim

        WORKDIR /app

        COPY pyproject.toml .
        COPY uv.lock .

        ENV TZ=America/New_York

        ENV UV_LINK_MODE=copy \
            UV_COMPILE_BYTECODE=1 \
            UV_PYTHON_DOWNLOADS=never \
            UV_PYTHON=python3.13

    image: hacktj25_base
    working_dir: /app
    restart: on-failure
    networks:
      - hacktj_net
    ports:
      - 8080:8080
    volumes:
      - .:/hacktj5
      - /app/.venv
    entrypoint:
      - uv
      - run
      - /app/manage.py
      - runserver
      - 0.0.0.0:8080

  next:
    container_name: hacktj25_nextjs
    build:
      dockerfile_inline:
        FROM ghcr.io/astral-sh/uv:0.6-python3.13-bookworm-slim

        WORKDIR /app

        COPY pyproject.toml .
        COPY uv.lock .

        ENV TZ=America/New_York

        ENV UV_LINK_MODE=copy \
            UV_COMPILE_BYTECODE=1 \
            UV_PYTHON_DOWNLOADS=never \
            UV_PYTHON=python3.13

    image: hacktj25_base
    working_dir: /app
    restart: on-failure
    networks:
      - hacktj_net
    ports:
      - 8080:8080
    volumes:
      - .:/hacktj5
      - /app/.venv
    entrypoint:
      - uv
      - run
      - /app/manage.py
      - runserver
      - 0.0.0.0:8080


networks:
  hacktj_net:
    driver: bridge
    name: hacktj_net

volumes:
  hacktj-pgdata:
